// <auto-generated />
using Formularios_bia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Formularios_bia.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210218060117_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Formularios_bia.Models.Article", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssociatedProgram")
                        .HasColumnType("int");

                    b.Property<int>("AssociatedProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("Q1")
                        .HasColumnType("bit");

                    b.Property<bool>("Q2")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssociatedProjectId");

                    b.HasIndex("FormId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Formularios_bia.Models.CheckBoxAsk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("FormId");

                    b.ToTable("CheckBoxAsks");
                });

            modelBuilder.Entity("Formularios_bia.Models.Form", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Formularios_bia.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PublicationFocusArea")
                        .HasColumnType("int");

                    b.Property<int>("PublicationResearchLines")
                        .HasColumnType("int");

                    b.Property<string>("Teacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Formularios_bia.Models.TextAsk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FormId");

                    b.ToTable("TextAsks");
                });

            modelBuilder.Entity("Formularios_bia.Models.Article", b =>
                {
                    b.HasOne("Formularios_bia.Models.Project", "AssociatedProject")
                        .WithMany()
                        .HasForeignKey("AssociatedProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Formularios_bia.Models.Form", null)
                        .WithMany("Articles")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssociatedProject");
                });

            modelBuilder.Entity("Formularios_bia.Models.CheckBoxAsk", b =>
                {
                    b.HasOne("Formularios_bia.Models.Form", null)
                        .WithMany("CheckBoxAsks")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Formularios_bia.Models.TextAsk", b =>
                {
                    b.HasOne("Formularios_bia.Models.Form", null)
                        .WithMany("TextAsks")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Formularios_bia.Models.Form", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("CheckBoxAsks");

                    b.Navigation("TextAsks");
                });
#pragma warning restore 612, 618
        }
    }
}
